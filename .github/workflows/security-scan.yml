name: Security Scanning

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
      - 'release/**'
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'

permissions:
  contents: read
  pull-requests: write
  security-events: write
  issues: write

jobs:
  dependency-security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit safety

      - name: Run pip-audit
        id: pip_audit
        continue-on-error: true
        run: |
          echo "### Pip Audit Results" > pip_audit_report.txt
          pip-audit --desc --format json > pip_audit.json || true
          pip-audit --desc >> pip_audit_report.txt || true

          if [ -s pip_audit.json ]; then
            echo "vulnerabilities_found=true" >> $GITHUB_OUTPUT
          else
            echo "vulnerabilities_found=false" >> $GITHUB_OUTPUT
          fi

      - name: Run Safety check
        id: safety
        continue-on-error: true
        run: |
          echo "### Safety Check Results" > safety_report.txt

          # Check if requirements files exist
          if [ -f requirements.txt ]; then
            safety check --file requirements.txt --json > safety.json || true
            safety check --file requirements.txt >> safety_report.txt || true
          fi

          if [ -f tests/requirements.txt ]; then
            safety check --file tests/requirements.txt >> safety_report.txt || true
          fi

      - name: Upload security reports as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            *_report.txt
            *.json
          retention-days: 30

      - name: Comment on PR with security findings
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            let comment = `## üîí Security Scan Results\n\n`;

            // Read pip-audit report
            try {
              if (fs.existsSync('pip_audit_report.txt')) {
                const pipAudit = fs.readFileSync('pip_audit_report.txt', 'utf8');
                comment += `<details><summary>üì¶ Dependency Vulnerabilities (pip-audit)</summary>\n\n\`\`\`\n${pipAudit}\n\`\`\`\n</details>\n\n`;
              }
            } catch (e) {
              console.log('No pip-audit report');
            }

            // Read safety report
            try {
              if (fs.existsSync('safety_report.txt')) {
                const safety = fs.readFileSync('safety_report.txt', 'utf8');
                comment += `<details><summary>üõ°Ô∏è Safety Check Results</summary>\n\n\`\`\`\n${safety}\n\`\`\`\n</details>\n\n`;
              }
            } catch (e) {
              console.log('No safety report');
            }

            const vulnerabilitiesFound = '${{ steps.pip_audit.outputs.vulnerabilities_found }}' === 'true';

            if (!vulnerabilitiesFound) {
              comment += `\n‚úÖ **No critical security issues detected!**\n`;
            } else {
              comment += `\n‚ö†Ô∏è **Security issues detected. Please review and address.**\n`;
            }

            comment += `\n---\n*Security scan completed. Full reports available in workflow artifacts.*`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  code-scanning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          queries: security-extended

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"
